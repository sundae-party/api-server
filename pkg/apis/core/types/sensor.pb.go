// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: sensor.proto

package types

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Sensor_Class int32

const (
	Sensor_none            Sensor_Class = 0
	Sensor_battery         Sensor_Class = 1  //% of battery that is left
	Sensor_humidity        Sensor_Class = 2  //% of humidity in the air
	Sensor_illuminance     Sensor_Class = 3  //light level in lx or lm
	Sensor_signal_strength Sensor_Class = 4  //Signal strength in dB or dBm
	Sensor_temperature     Sensor_Class = 5  //Temperature in °C or °F
	Sensor_power           Sensor_Class = 6  //Power in W or kW
	Sensor_pressure        Sensor_Class = 7  //Pressure in hPa or mbar
	Sensor_timestamp       Sensor_Class = 8  //Unix timestamp int64
	Sensor_current         Sensor_Class = 9  //Current in A
	Sensor_energy          Sensor_Class = 10 //Energy in Wh or kWh
	Sensor_power_factor    Sensor_Class = 11 //Power Factor in %
	Sensor_voltage         Sensor_Class = 12 //Voltage in V
)

// Enum value maps for Sensor_Class.
var (
	Sensor_Class_name = map[int32]string{
		0:  "none",
		1:  "battery",
		2:  "humidity",
		3:  "illuminance",
		4:  "signal_strength",
		5:  "temperature",
		6:  "power",
		7:  "pressure",
		8:  "timestamp",
		9:  "current",
		10: "energy",
		11: "power_factor",
		12: "voltage",
	}
	Sensor_Class_value = map[string]int32{
		"none":            0,
		"battery":         1,
		"humidity":        2,
		"illuminance":     3,
		"signal_strength": 4,
		"temperature":     5,
		"power":           6,
		"pressure":        7,
		"timestamp":       8,
		"current":         9,
		"energy":          10,
		"power_factor":    11,
		"voltage":         12,
	}
)

func (x Sensor_Class) Enum() *Sensor_Class {
	p := new(Sensor_Class)
	*p = x
	return p
}

func (x Sensor_Class) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sensor_Class) Descriptor() protoreflect.EnumDescriptor {
	return file_sensor_proto_enumTypes[0].Descriptor()
}

func (Sensor_Class) Type() protoreflect.EnumType {
	return &file_sensor_proto_enumTypes[0]
}

func (x Sensor_Class) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sensor_Class.Descriptor instead.
func (Sensor_Class) EnumDescriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{1, 0}
}

type SetSensorValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SensorName      string `protobuf:"bytes,1,opt,name=SensorName,proto3" json:"SensorName,omitempty"`
	IntegrationName string `protobuf:"bytes,2,opt,name=integrationName,proto3" json:"integrationName,omitempty"`
	Value           bool   `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetSensorValueRequest) Reset() {
	*x = SetSensorValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSensorValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSensorValueRequest) ProtoMessage() {}

func (x *SetSensorValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSensorValueRequest.ProtoReflect.Descriptor instead.
func (*SetSensorValueRequest) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SetSensorValueRequest) GetSensorName() string {
	if x != nil {
		return x.SensorName
	}
	return ""
}

func (x *SetSensorValueRequest) GetIntegrationName() string {
	if x != nil {
		return x.IntegrationName
	}
	return ""
}

func (x *SetSensorValueRequest) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type Sensor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Integration   *Integration `protobuf:"bytes,2,opt,name=integration,proto3" json:"integration,omitempty"`
	Device        string       `protobuf:"bytes,3,opt,name=Device,proto3" json:"Device,omitempty"`
	DisplayedName string       `protobuf:"bytes,4,opt,name=displayed_name,json=displayedName,proto3" json:"displayed_name,omitempty"`
	Room          string       `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
	Value         float32      `protobuf:"fixed32,6,opt,name=value,proto3" json:"value,omitempty"`
	Class         Sensor_Class `protobuf:"varint,7,opt,name=class,proto3,enum=types.Sensor_Class" json:"class,omitempty"`
	Unit          string       `protobuf:"bytes,8,opt,name=unit,proto3" json:"unit,omitempty"`
	Mutation      string       `protobuf:"bytes,9,opt,name=mutation,proto3" json:"mutation,omitempty"`
}

func (x *Sensor) Reset() {
	*x = Sensor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sensor) ProtoMessage() {}

func (x *Sensor) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sensor.ProtoReflect.Descriptor instead.
func (*Sensor) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{1}
}

func (x *Sensor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sensor) GetIntegration() *Integration {
	if x != nil {
		return x.Integration
	}
	return nil
}

func (x *Sensor) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Sensor) GetDisplayedName() string {
	if x != nil {
		return x.DisplayedName
	}
	return ""
}

func (x *Sensor) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *Sensor) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Sensor) GetClass() Sensor_Class {
	if x != nil {
		return x.Class
	}
	return Sensor_none
}

func (x *Sensor) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Sensor) GetMutation() string {
	if x != nil {
		return x.Mutation
	}
	return ""
}

var File_sensor_proto protoreflect.FileDescriptor

var file_sensor_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xdc, 0x03, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x29, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x2e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc3, 0x01, 0x0a, 0x05, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x68,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x69, 0x6c, 0x6c,
	0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x10, 0x04, 0x12,
	0x0f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0x05,
	0x12, 0x09, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x10,
	0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x10, 0x0c,
	0x32, 0xc2, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x1a, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x1a, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12,
	0x26, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x1a, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x1a, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12,
	0x2f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x30, 0x01,
	0x12, 0x2a, 0x0a, 0x08, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x12, 0x0d, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x1a, 0x0d, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x65, 0x2d, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sensor_proto_rawDescOnce sync.Once
	file_sensor_proto_rawDescData = file_sensor_proto_rawDesc
)

func file_sensor_proto_rawDescGZIP() []byte {
	file_sensor_proto_rawDescOnce.Do(func() {
		file_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(file_sensor_proto_rawDescData)
	})
	return file_sensor_proto_rawDescData
}

var file_sensor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sensor_proto_goTypes = []interface{}{
	(Sensor_Class)(0),             // 0: types.Sensor.Class
	(*SetSensorValueRequest)(nil), // 1: types.SetSensorValueRequest
	(*Sensor)(nil),                // 2: types.Sensor
	(*Integration)(nil),           // 3: types.Integration
	(*GetAllRequest)(nil),         // 4: types.GetAllRequest
}
var file_sensor_proto_depIdxs = []int32{
	3, // 0: types.Sensor.integration:type_name -> types.Integration
	0, // 1: types.Sensor.class:type_name -> types.Sensor.Class
	2, // 2: types.SensorHandler.Get:input_type -> types.Sensor
	2, // 3: types.SensorHandler.Create:input_type -> types.Sensor
	2, // 4: types.SensorHandler.Update:input_type -> types.Sensor
	2, // 5: types.SensorHandler.Delete:input_type -> types.Sensor
	4, // 6: types.SensorHandler.GetAll:input_type -> types.GetAllRequest
	2, // 7: types.SensorHandler.WatchAll:input_type -> types.Sensor
	1, // 8: types.SensorHandler.setValue:input_type -> types.SetSensorValueRequest
	2, // 9: types.SensorHandler.Get:output_type -> types.Sensor
	2, // 10: types.SensorHandler.Create:output_type -> types.Sensor
	2, // 11: types.SensorHandler.Update:output_type -> types.Sensor
	2, // 12: types.SensorHandler.Delete:output_type -> types.Sensor
	2, // 13: types.SensorHandler.GetAll:output_type -> types.Sensor
	2, // 14: types.SensorHandler.WatchAll:output_type -> types.Sensor
	2, // 15: types.SensorHandler.setValue:output_type -> types.Sensor
	9, // [9:16] is the sub-list for method output_type
	2, // [2:9] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sensor_proto_init() }
func file_sensor_proto_init() {
	if File_sensor_proto != nil {
		return
	}
	file_integration_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sensor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSensorValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sensor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sensor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sensor_proto_goTypes,
		DependencyIndexes: file_sensor_proto_depIdxs,
		EnumInfos:         file_sensor_proto_enumTypes,
		MessageInfos:      file_sensor_proto_msgTypes,
	}.Build()
	File_sensor_proto = out.File
	file_sensor_proto_rawDesc = nil
	file_sensor_proto_goTypes = nil
	file_sensor_proto_depIdxs = nil
}
