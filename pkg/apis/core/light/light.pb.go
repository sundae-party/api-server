// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: light.proto

package light

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	integration "sundae-party/api-server/pkg/apis/core/integration"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type State_FlashMode int32

const (
	State_SHORT State_FlashMode = 0
	State_LONG  State_FlashMode = 1
)

// Enum value maps for State_FlashMode.
var (
	State_FlashMode_name = map[int32]string{
		0: "SHORT",
		1: "LONG",
	}
	State_FlashMode_value = map[string]int32{
		"SHORT": 0,
		"LONG":  1,
	}
)

func (x State_FlashMode) Enum() *State_FlashMode {
	p := new(State_FlashMode)
	*p = x
	return p
}

func (x State_FlashMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State_FlashMode) Descriptor() protoreflect.EnumDescriptor {
	return file_light_proto_enumTypes[0].Descriptor()
}

func (State_FlashMode) Type() protoreflect.EnumType {
	return &file_light_proto_enumTypes[0]
}

func (x State_FlashMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State_FlashMode.Descriptor instead.
func (State_FlashMode) EnumDescriptor() ([]byte, []int) {
	return file_light_proto_rawDescGZIP(), []int{2, 0}
}

type Light struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Integration   *integration.Integration `protobuf:"bytes,2,opt,name=integration,proto3" json:"integration,omitempty"`
	Device        string                   `protobuf:"bytes,3,opt,name=Device,proto3" json:"Device,omitempty"`
	DisplayedName string                   `protobuf:"bytes,4,opt,name=displayed_name,json=displayedName,proto3" json:"displayed_name,omitempty"`
	Room          string                   `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
	DesiredState  *State                   `protobuf:"bytes,6,opt,name=desired_state,json=desiredState,proto3" json:"desired_state,omitempty"`
	State         *State                   `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Light) Reset() {
	*x = Light{}
	if protoimpl.UnsafeEnabled {
		mi := &file_light_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Light) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Light) ProtoMessage() {}

func (x *Light) ProtoReflect() protoreflect.Message {
	mi := &file_light_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Light.ProtoReflect.Descriptor instead.
func (*Light) Descriptor() ([]byte, []int) {
	return file_light_proto_rawDescGZIP(), []int{0}
}

func (x *Light) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Light) GetIntegration() *integration.Integration {
	if x != nil {
		return x.Integration
	}
	return nil
}

func (x *Light) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Light) GetDisplayedName() string {
	if x != nil {
		return x.DisplayedName
	}
	return ""
}

func (x *Light) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *Light) GetDesiredState() *State {
	if x != nil {
		return x.DesiredState
	}
	return nil
}

func (x *Light) GetState() *State {
	if x != nil {
		return x.State
	}
	return nil
}

type ColorRGB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red   int32 `protobuf:"varint,1,opt,name=red,proto3" json:"red,omitempty"`
	Green int32 `protobuf:"varint,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue  int32 `protobuf:"varint,3,opt,name=blue,proto3" json:"blue,omitempty"`
}

func (x *ColorRGB) Reset() {
	*x = ColorRGB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_light_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorRGB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorRGB) ProtoMessage() {}

func (x *ColorRGB) ProtoReflect() protoreflect.Message {
	mi := &file_light_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorRGB.ProtoReflect.Descriptor instead.
func (*ColorRGB) Descriptor() ([]byte, []int) {
	return file_light_proto_rawDescGZIP(), []int{1}
}

func (x *ColorRGB) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *ColorRGB) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *ColorRGB) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brightness int32           `protobuf:"varint,1,opt,name=Brightness,proto3" json:"Brightness,omitempty"`
	ColorRGB   *ColorRGB       `protobuf:"bytes,2,opt,name=colorRGB,proto3" json:"colorRGB,omitempty"`
	On         bool            `protobuf:"varint,3,opt,name=on,proto3" json:"on,omitempty"`
	Kelvin     int32           `protobuf:"varint,4,opt,name=kelvin,proto3" json:"kelvin,omitempty"`
	FlashMode  State_FlashMode `protobuf:"varint,5,opt,name=flashMode,proto3,enum=light.State_FlashMode" json:"flashMode,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_light_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_light_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_light_proto_rawDescGZIP(), []int{2}
}

func (x *State) GetBrightness() int32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

func (x *State) GetColorRGB() *ColorRGB {
	if x != nil {
		return x.ColorRGB
	}
	return nil
}

func (x *State) GetOn() bool {
	if x != nil {
		return x.On
	}
	return false
}

func (x *State) GetKelvin() int32 {
	if x != nil {
		return x.Kelvin
	}
	return 0
}

func (x *State) GetFlashMode() State_FlashMode {
	if x != nil {
		return x.FlashMode
	}
	return State_SHORT
}

var File_light_proto protoreflect.FileDescriptor

var file_light_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x1a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x02, 0x0a, 0x05, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x31, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x08, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x47, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62,
	0x6c, 0x75, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a,
	0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x47, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x47, 0x42,
	0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x47, 0x42, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65,
	0x6c, 0x76, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6b, 0x65, 0x6c, 0x76,
	0x69, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x09, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x01, 0x32, 0x82, 0x02, 0x0a, 0x0c, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c,
	0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x0c, 0x2e, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x1a, 0x0c, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x0c, 0x2e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x0c, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x30,
	0x01, 0x12, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x0c, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x30, 0x01, 0x42,
	0x2d, 0x5a, 0x2b, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x65, 0x2d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_light_proto_rawDescOnce sync.Once
	file_light_proto_rawDescData = file_light_proto_rawDesc
)

func file_light_proto_rawDescGZIP() []byte {
	file_light_proto_rawDescOnce.Do(func() {
		file_light_proto_rawDescData = protoimpl.X.CompressGZIP(file_light_proto_rawDescData)
	})
	return file_light_proto_rawDescData
}

var file_light_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_light_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_light_proto_goTypes = []interface{}{
	(State_FlashMode)(0),            // 0: light.State.FlashMode
	(*Light)(nil),                   // 1: light.Light
	(*ColorRGB)(nil),                // 2: light.ColorRGB
	(*State)(nil),                   // 3: light.State
	(*integration.Integration)(nil), // 4: integration.Integration
}
var file_light_proto_depIdxs = []int32{
	4,  // 0: light.Light.integration:type_name -> integration.Integration
	3,  // 1: light.Light.desired_state:type_name -> light.State
	3,  // 2: light.Light.state:type_name -> light.State
	2,  // 3: light.State.colorRGB:type_name -> light.ColorRGB
	0,  // 4: light.State.flashMode:type_name -> light.State.FlashMode
	1,  // 5: light.LightHandler.SetDesiredState:input_type -> light.Light
	1,  // 6: light.LightHandler.SetState:input_type -> light.Light
	1,  // 7: light.LightHandler.Create:input_type -> light.Light
	4,  // 8: light.LightHandler.GetByDevice:input_type -> integration.Integration
	4,  // 9: light.LightHandler.GetByIntegration:input_type -> integration.Integration
	1,  // 10: light.LightHandler.SetDesiredState:output_type -> light.Light
	1,  // 11: light.LightHandler.SetState:output_type -> light.Light
	1,  // 12: light.LightHandler.Create:output_type -> light.Light
	1,  // 13: light.LightHandler.GetByDevice:output_type -> light.Light
	1,  // 14: light.LightHandler.GetByIntegration:output_type -> light.Light
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_light_proto_init() }
func file_light_proto_init() {
	if File_light_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_light_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Light); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_light_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorRGB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_light_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_light_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_light_proto_goTypes,
		DependencyIndexes: file_light_proto_depIdxs,
		EnumInfos:         file_light_proto_enumTypes,
		MessageInfos:      file_light_proto_msgTypes,
	}.Build()
	File_light_proto = out.File
	file_light_proto_rawDesc = nil
	file_light_proto_goTypes = nil
	file_light_proto_depIdxs = nil
}
